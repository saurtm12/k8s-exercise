name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'
      
      - name: 'Configure docker and set tags'
        run: |-
          gcloud --quiet auth configure-docker
          export IMAGE_RELEASE=${BRANCH}-${GITHUB_SHA}
          echo "IMAGE_RELEASE=$IMAGE_RELEASE" >> $GITHUB_ENV
          echo "TODO_APP_IMAGE_TAG=gcr.io/$PROJECT_ID/todo-app:$IMAGE_RELEASE" >> $GITHUB_ENV
          echo "TODO_BACKEND_IMAGE_TAG=gcr.io/$PROJECT_ID/todo-backend:$IMAGE_RELEASE" >> $GITHUB_ENV
          echo "TODO_CRON_IMAGE_TAG=gcr.io/$PROJECT_ID/todo-cron:$IMAGE_RELEASE" >> $GITHUB_ENV
          echo "PINGPONG_IMAGE_TAG=gcr.io/$PROJECT_ID/pingpong:$IMAGE_RELEASE" >> $GITHUB_ENV
          echo "LOG_OUTPUT_IMAGE_TAG=gcr.io/$PROJECT_ID/log-output:$IMAGE_RELEASE" >> $GITHUB_ENV
      - name: Build TODO images
        run: |-
          docker build --tag $TODO_APP_IMAGE_TAG ./4/4.5/todo-app/
          docker build --tag $TODO_BACKEND_IMAGE_TAG ./4/4.5/todo-backend/
          docker build --tag $TODO_CRON_IMAGE_TAG ./4/4.5/cronjob/
          docker build --tag $PINGPONG_IMAGE_TAG ./4/4.1/pingpong/
          docker build --tag $LOG_OUTPUT_IMAGE_TAG ./4/4.1/log-output/
      - name: Publish TODO images
        run: |-
          docker push $TODO_APP_IMAGE_TAG
          docker push $TODO_BACKEND_IMAGE_TAG
          docker push $TODO_CRON_IMAGE_TAG
          docker push $PINGPONG_IMAGE_TAG 
          docker push $LOG_OUTPUT_IMAGE_TAG 

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Deploy to staging
        run: |-
          cd overlays/prod
          kustomize edit set image PROJECT/TODO-APP-IMAGE=$TODO_APP_IMAGE_TAG
          kustomize edit set image PROJECT/TODO-BACKEND-IMAGE=$TODO_BACKEND_IMAGE_TAG
          kustomize edit set image PROJECT/TODO-CRON-IMAGE=$TODO_CRON_IMAGE_TAG
          kustomize edit set image PROJECT/PINGPONG-IMAGE=$PINGPONG_IMAGE_TAG
          kustomize edit set image PROJECT/LOG-OUTPUT-IMAGE=$LOG_OUTPUT_IMAGE_TAG

          kustomize build .
        if: github.ref == 'refs/heads/master'

      - name: commit kustomization.yaml to GitHub
        uses: EndBug/add-and-commit@v9
        with:
          add: 'kustomization.yaml'
          message: New version released ${{ github.sha }}